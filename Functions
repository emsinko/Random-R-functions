expected_value <- function(x,p){
  sum(x*p)
}

variance <- function(x,p){
  expected_value(x^2,p) - expected_value(x,p)^2
}

variance_v2 <- function(x,p){
  expected_value( (x-expected_value(x,p))^2, p )
}

standard_deviation <- function(x,p){
  sqrt(variance(x,p))
}

two_same <- function(a,b,c){
  if( (a == b & a == c) | (a!=b & a!=c & b!=c)) return(0) 
  else return(1)
}

'%notin%' <- Negate('%in%')

bisection_method <- function(f,a,b){
  if( f(a)*f(b) < 0){
    while(abs(a-b) > 0.00001){
      c <- (a+b)/2
      if(f(c) == 0) return(c)
      if(f(a)*f(c) < 0){
        b <- c
      }
      else{
        a <- c 
      }
    }
    return((a+b)/2)
  } 
  else{
    return("Koren je mimo intervalu (a,b)")
  }
}


# Vypocet integralu pomocou trapezium metody
integral_trapez <- function(a,b,n,f){
  
  #######################################################################################
  # <a,b> je interval na ktorom integrujeme                                             #
  #  n    je pocet lichobeznikov, ktorych obsah spocitavame                             #
  #  f    funkcia, ktoru integrujeme. Piseme napr. v tvare f = function(x) x^2 - sin(x) #
  #######################################################################################
  
  delta_x <- (b-a)/n
  x <- seq(from = a, to = b, by = delta_x)
  if(length(f(x)) == 1) return(delta_x / 2  * (2*f(x)*(n+1) - f(a) - f(b)))  #
  else return(delta_x / 2  * (2*sum(f(x)) - f(a) - f(b)))
}
integral_trapez(3, 4, 100, f = function(x) 2)
  
#######

ramon_report <- function(x,freq){ 
  
  library(glue) 
  
  data <- rep(x,freq)
  n <- length(data)
  var_data <- (n-1)/n*var(data)
  sd_data <- sqrt(var_data)
  
  #print(sum(data^2)/n - mean(data)^2)
  
  print(glue("n: {round(length(data),2)}"))
  print(glue("Mean: {round(mean(data),2)}"))
  print(glue("Variance: {round(var_data,2)}"))
  print(glue("Standard deviation: {round(sd_data,2)}"))
  
}



splatka <- function(P = 55000,r = 1.2,n = 20){

  #########################################################################################
  #  Vypocet mesacnej splatky pri fixnej urokovej sadzbe r, istiny P a doby splacania n   #
  #  P    Istina                                                                          #
  #  r    Urokova sadzba p.a.                                                             #
  #  n    Pocet rokov splacania                                                           #
  #########################################################################################
  
  r <- r/100/12
  n <- 12*n
  if(r == 0)  A <- P/n
  else        A <- P*( (r*(1+r)^n)/((1+r)^n-1))  
  
  return(A)
  
  return(A)
}
