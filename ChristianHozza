##################
### GRAD EXTRA ###
##################

library(tidyverse)

load("pollution.Rdata")
pollution

###
# a) Create plots that illustrate the relationship between mortality rate and each of the air pollution
# measures (hc, so2, and nox). Describe what you see.


glimpse(pollution)

qplot(x = hc, y = mortality, data = pollution)
qplot(x = so2, y = mortality, data = pollution)
qplot(x = nox, y = mortality, data = pollution)

# Premenne hc a nox maju na prvy pohlad velmi podobne vyzerajucu zavislost s premennou mortality.
# Aj hc aj nox maju zopar extremny hodnot (outlierov). 
# Pozrime sa na zavislost bez nich:

qplot(x = hc, y = mortality, data = subset(pollution, hc < 100))
qplot(x = nox, y = mortality, data = subset(pollution, nox < 100))

# Vsetky 3 premenne vykazuju skor logarimicku zavislost. Log - transformacia bude vhodna

#### 
# b) Apply a natural log transformation to each of the pollution measures, then repeat part a)
# with the transformed variables.

pollution["hc_log"] <- log(pollution$hc)
pollution["so2_log"] <- log(pollution$so2)
pollution["nox_log"] <- log(pollution$nox)

qplot(x = hc_log, y = mortality, data = pollution)
qplot(x = so2_log, y = mortality, data = pollution)
qplot(x = nox_log, y = mortality, data = pollution)

# Zavislost uz vyzera linearnejsia so zopar outliermi


#####
# c) Fit a model estimating the association between mortality rate and each of the air pollution
# measures.

# i. Identify which types of air pollution are statistically significantly associated with mortality
# rate at alpha = 0:05.
# ii. Interpret the model slope coefficients.
# iii. Assess whether these predictors, as a group, are useful for predicting mortality rate.


# Zavislost umrtia len od jednej premennej:

summary(lm(mortality ~ hc_log , data = pollution)) # hc_log alone is not significant, but I think, it is because of outliers. We can see linear trend in scatter plot
summary(lm(mortality ~ so2_log, data = pollution)) # so2_log alone is significant (p-value  < 5%)
summary(lm(mortality ~ nox_log, data = pollution)) # nox_log alone is significant (p-value  < 5%)


# Slope:
# mortality = b0 + b1 * log(hc)
# mortality = b0 + b1 * log(so2)
# mortality = b0 + b1 * log(nox)


#   hc_log coeff = 7,949 -> zvysenie logaritmu hc o jednu jednotku zvysi umrtnost o 7,949
#   so2_log coeff = 16,734 -> zvysenie logaritmu so2 o jednu jednotku zvysi umrtnost o 16,734
#   nox_log coeff = 15,099 -> zvysenie logaritmu nox o jednu jednotku zvysi umrtnost o 15,099

# Poznamka: prirodzeny logaritmus sa navysi o jednu jednotku v pripade, ak vynasobim hodnotu cislom e (eulerova konstanta)

# Priklad:
# log(14)
# log(14 * exp(1))


model <- lm(mortality ~ hc_log + so2_log + nox_log, data = pollution)
summary(model)
 
# Hc_LOG, NOX_LOG  are significant (p-value < 1%),  SO2_log has p-value = 5,492% 
# Ked sa pozrieme na group model, vidime ze hc_log ma zaporny koeficient v summary. 
# Dovodom bude zrejme vysoka korelacia medzi premennymi a tym padom sa efekty medzi sebou vyrovnavaju

# Korelacia
cor(pollution[c("mortality","hc_log","so2_log", "nox_log")])

# Potvrdilo sa tusenie, hc_log a nox_log maju az 0,9415 pearsonovu korelaciu - velmi silna zavislost


# Assess whether these predictors, as a group, are useful for predicting mortality rate.
summary(lm(mortality ~ hc_log , data = pollution))$adj.r.squared
summary(lm(mortality ~ so2_log, data = pollution))$adj.r.squared
summary(lm(mortality ~ nox_log, data = pollution))$adj.r.squared
summary(model)$adj.r.squared

# Ano, adjusted r square napoveda, ze je dobre modelovat s viacerymi premennymi naraz. 
# Odporucal by som vsak pouzit iba jednu z premenny hc_log a nox_log nakolko su prilis korelovane co by porusovalo assumption for multicollinearity.
# Linear regression assumes that there is little or no multicollinearity in the data.

 
# d) Investigate whether the mean hydrocarbon pollution level differs across regions.
#   i. Graphically summarize the association between hydrocarbon level and region. Describe
#      what you see.
#   ii. Conduct an analysis to determine whehter mean hydrocarbon level varies among regions
#       of the country and summarize the conclusions.
#   iii. Assess whether the assumptions for the analysis method used in part ii. are reasonably
#       satisfied.

# MW = Midwest
# NE = Northeas
# S = South
# W = West

# Porovnanie priemernych hodnot HC podla regionu 
pollution %>%
  group_by(region) %>%
  summarise(mean_hydrocarbon_pollution = mean(hc)) %>%
  arrange(-mean_hydrocarbon_pollution)

# West ma vyrazne vyssiu priemernu hodnotu hc = hydrocarbon pollution level 
boxplot(hc~region, data = pollution)

# Boxploty na porovnanie -  West ma vyrazne vyssiu priemernu hodnotu hc = hydrocarbon pollution level 
pollution %>% 
  ggplot(aes(x = region, y = hc)) +
  geom_boxplot() + theme_bw()

# Boxploty na  porovnanie bez region = West (aby to nebolo skreslene)
pollution %>% 
  filter(region != "W") %>% 
  ggplot(aes(x = region, y = hc)) +
  geom_boxplot() + theme_bw()

pollution
# NE (north east) ma velmi nesymetricke rozdelenie na zaklade boxplotu. Konkretne: right skewed
# NE ma najnizsi median, avsak priemer ma vyssi ako region = S (south)


# Statisticky test na porovnanie viacerych strednych hodnot:
# H0: mu_1 = mu_2 = mu_3 = mu_4 vs. H1: existuju aspon jedna dvojica x,y:  mu_x != mu_y

res.aov <- aov(hc ~ region, data = pollution)

# Summary of the analysis
summary(res.aov)  # p-value <<< 5%,  Mozeme zamietnut H0, je tam signifikantny rozdiel medzi skupinami

# Ak by sme vynechali vyrazne odlisny West:
summary(aov(hc ~ region, data = subset(pollution, region != "W")))
# vysledkom by bolo p-value = 42,3% a teda vo zvysnych 3 regionoch nie je vyznamne odlisna hodnota HC


## Assumptions of ANOVA test
# The observations are obtained independently and randomly from the population defined by the factor levels
# The data of each factor level are normally distributed.
# These normal populations have a common variance. 

# Normality test:
shapiro.test(pollution[pollution$region == "W", "hc"])
shapiro.test(pollution[pollution$region == "MW", "hc"])
shapiro.test(pollution[pollution$region == "NE", "hc"])
shapiro.test(pollution[pollution$region == "S", "hc"])

# Okrem region = S = south mali vÅ¡etky regionu signifikantne odlisne rozdelenie ako normalne (p-value shapirovho-wilkovho testu normality bolo mensie ako 5%)
# Assumptions are not satisfied


# V pripade, ked nie su splnene podmienky na anova test, mozeme pouzit jej neparametricku verziu: Kruskal-Wallis test
kruskal.test(x = pollution$hc, g = pollution$region) # podobne ako u anovy, p-value < 5%, zamietame rovnost medianov


####
# e) Fit a model estimating the association between hydrocarbon level and the two climate variables,
#    rain and jantemp.
# i. Summarize the main findings from the model in language accessible to a nonstatistician.
# ii. Do you find the results surprising? Why or why not?

qplot(y = hc, x = rain, data = pollution)
qplot(y = hc, x = jantemp, data = pollution)

summary(lm(hc ~ rain + jantemp, data = pollution))

# Obe premenne (aj rain aj jantemp) vysli signifikantne.

# Pre nestatitikov:
  # Priemerna teplota v januari a rocny rainfall maju vplyv na amount of hydrocarbons present in the air, in ppm
  # Z pozorovani sa ukazalo, ze cim je vyssia hodnota priemernej teploty v januri, tym vyssie su namerane hodnoty hydrocarbonov v ovzdusi.
  # Opacny efekt mali rocne uhrnne zrazky. Cim vyssie su zrazky, tym mensia je uroven hydrocarbonov v ovzdusi. 
  # To je ocakavatelne (s dazdom), vid. vysvetlenie nizsie z googla



####
# ii. Do you find the results surprising? Why or why not?

## Google: how does rain reduce air pollution?:

# As a raindrop falls through the atmosphere, it can attract tens to hundreds of 
# tiny aerosol particles to its surface before hitting the ground. The process by 
# which droplets and aerosols attract is coagulation, a natural phenomenon that can 
# act to clear the air of pollutants like soot, sulfates, and organic particles.


#######
# f) Fit a model predicting mortality rate from hydrocarbon pollution level and region.
# i. Interpret the model slope coefficients.
# ii. Fit a model predicting mortality rate from hydrocarbon pollution level, region, and the
# interaction between hydrocarbon level and region. Interpret the model coefficients.

# The variable region has levels Midwest (MW), Northeast (NE), South (S), and West (W).

# Referencna hodnota regiona = MW

#####
# i. Interpret the model slope coefficients.

# Bez logaritmickej transofrmacie
summary(lm(mortality ~ hc + region, data = pollution))

# Pre vsetky 4 regiony bol odhadnuty rovnaky slope pre premennu hc (dovod: nepouzili sme interakciu medzi hc a region)
# hc slope ma statisticky nevyznamny koeficient = 0.0875
# Interpretacia: zvysenie hodnoty hc o jedno jednotku zvysuje v priemere umrtnost o 0,08752 


# S logaritmickou transofrmacie_
summary(lm(mortality ~ hc_log + region, data = pollution))

# Pre vsetky 4 regiony bol odhadnuty rovnaky slope pre premennu hc_log (dovod: nepouzili sme interakciu medzi hc_log a region)
# hc_log slope ma statisticky vyznamny koeficient = 33,746
# Interpretacia: zvysenie hodnoty hc_log o jednu jednotku zvysuje v priemere umrtnost o 33,746 

######
# ii. Fit a model predicting mortality rate from hydrocarbon pollution level, region, and the
# interaction between hydrocarbon level and region. Interpret the model coefficients.

summary(lm(mortality ~ hc * region, data = pollution))

### Interpretacia koeficientov:

# intercept = 900.006 , constant for region NW
# hc = 1.4928 # hodnotla slope-u pre region NW :  morlatity = 900.006 + 1,4928 * hc


### Odhad pre region NE:
# regionNE = 16.2114:  intercept regionu NE je  navyseny o tuto hodnotu oproti regionu NW
# hc:regionNE = 0.3544:  slope regionu NE je  navyseny o tuto hodnotu oproti  NW

#  mortality = 900.006 + 16.2114 + (1,4928 + 0.3544) * hc


### Odhad pre region S:
# regionS = 13.6585:  intercept regionu S je  navyseny o tuto hodnotu oproti regionu NW
# hc:regionS = 2.7071 :  slope regionu S je navyseny o tuto hodnotu oproti  NW

#  mortality = 900.006 + 13.6585 + (1,4928 + 2.7071) * hc



### Odhad pre region W:
# regionW = -33.4419:  intercept regionu W je navyseny o tuto hodnotu oproti regionu NW
# hc:regionW = -1.4909 :  slope regionu W jenavyseny o tuto hodnotu oproti  NW

#  mortality = 900.006 -33.4419 + (1,4928 + -1.4909) * hc


#######
# g) Build a best predictive model for mortality rate that contains at most three predictors.


glimpse(pollution)

# Premennu city vylucime, nakolko to nie je premenna vhodna do modelovania

# Najskor sa pozrime na vizualizaciu zavislosti jednotlivych premennych

plot(mortality ~ jantemp, data = pollution) # slabsia zavislost
plot(mortality ~ rain, data = pollution) # linearna zavislost, nevidno vyrazne outliere
plot(mortality ~ educ, data = pollution) # linearna zavislost, nevidno vyrazne outliere
plot(mortality ~ nonwhite, data = pollution) # linearna zavislost, nevidno vyrazne outliere
plot(mortality ~ whitecollar, data = pollution) # linearna zavislost
plot(mortality ~ income, data = pollution)  # slaba zavislost
plot(mortality ~ housesize, data = pollution) # linearna zavislost
boxplot(mortality ~ region, data = pollution) # West ma nizsiu mortalitu, vhodne zakomponovat
# Mohli sme vidiet v predoslych castiach, ze je lepsie pouzit logaritmicke verzie pre premenne hc, so2, nox


# Prvy dojem z vizualizacie je taky, ze jantemp a income by som vylucil z modelovania, nakolko som nepozoroval linearnu zavislost 

glimpse(pollution)

# Korelacna matica a korelacie
corr_matrix  <- cor(pollution[c("mortality","jantemp","rain","educ","nonwhite","whitecollar","housesize","income","hc_log","so2_log","nox_log")])
corr_matrix
abs(corr_matrix) > 0.7

# Jedine premenne s korelaciou vyssou ako 0.7 su hc_log, so2_log a nox_log
# Najviac korelovane su hc_log a nox_log.

# Skusme sa pozriet na initial model (vylucene jantemp a income a pouzite logaritmicke transformacie)
summary(lm(mortality ~ rain + educ + nonwhite + whitecollar + housesize +  region + 
             hc_log + so2_log + nox_log, data = pollution))

# Pri tolkych premennych sa signifikantne ukazuje iba nonwhite (pvalue < 1%). 
# Adjusted R-squared = 0.6656
glimpse(pollution)

# Z troch silne korelovanych premennyh pouzijeme tu, ktora ma najvyssiu vykonnost pomoocu r squared, ak by sme modelovali len pomocou jednej premennej
summary(lm(mortality ~ hc_log , data = pollution)) 
summary(lm(mortality ~ so2_log, data = pollution)) 
summary(lm(mortality ~ nox_log, data = pollution)) 

# so2_log ma najvyssie r squared, pouzijeme len tuto premennu z tejto trojice

# Vylucme zvysne dve
summary(lm(mortality ~ rain + educ + nonwhite + whitecollar + housesize  + region + so2_log, data = pollution))

# Mozeme pozorovat efekt vylucenia. Premenna so2_log uz sa ukazuje signifikantna. Dopomohlo tomu vylucenie velmi podobnych premennych, ktorych efekty sa "bili" medzi sebou

# Teraz vylucme premennu, ktora mala v poslednom summary() najvyssie pvalue = 0.78 pre housesize
summary(lm(mortality ~ rain + educ + nonwhite + whitecollar + region + so2_log, data = pollution))


# Zostali nam nesignifikantne premenne: rain, educ, whitecollar, region.

# Vyber poslednej premennej urobime tak, ze k premennym so2_log a nonwhite budeme postupne pridavat premenne po jednom a pozrieme sa na vykonnost
summary(lm(mortality ~ nonwhite + so2_log + rain, data = pollution)) # adj. r-squared = 0.6237
summary(lm(mortality ~ nonwhite + so2_log + educ, data = pollution)) # adj. r-squared = 0.623
summary(lm(mortality ~ nonwhite + so2_log + whitecollar, data = pollution)) # naslabsi vysledok, adj. r-squared = 0.5823
summary(lm(mortality ~ nonwhite + so2_log + region, data = pollution)) # adj. r-squared = 0.6448

# Rain ma o nieco lepsi vysledok ako educ, avsak z hladiska interpretovatelnosti mi vacsi zmysel dava premenna education na vplyv umrtnosti. 
# Kedze vsak najlepsi vysledok preukazal region, finalny model sa bude skladat z premennych:
# nonwhite, so2log, region

model_final <- lm(mortality ~ nonwhite + so2_log + region, data = pollution)
summary(model_final)

# Adjusted R-squared = 0.6448
# R-squared = 0.6749

# Nevyhoda tohto modelu - nepouzita mimo USA, kedze medzi premennami sa nachadza region


### iii) Evaluate the model assumptions for the final model.

shapiro.test(model_final$residuals) # pvalue = 2,72 % -> not normally distributed - NOT OK
plot(model_final,1) # line should be straight without trend -  OK ! je tam mala zavislost, ale povazujem ju za prijatelnu
plot(model_final,3) # line should be straight without trend - OK ! je tam mala zavislost, ale povazujem ju za prijatelnu
acf(model_final$residuals) # no autocorrelation - OK!

# Model nesplna normalitu rezidui - jediny problem


###
# h) Suppose we are interested in using these data to classify cities outside the United States
# into those above versus below the median US mortality rate. Consider the following three
# models:
#   â Model 1: log-transformed amount of sulfur dioxide, percentage of population that is
# non-white, and annual rainfall
# â Model 2: full model, untransformed pollution measures
# â Model 3: full model, log-transformed pollution measures

glimpse(pollution)
 
pollution["target"] <- ifelse(pollution$mortality < median(pollution$mortality), 0, 1)

# Z full modelu musime vylucit premennu city a region, nakolko chceme vyuzit model na predikciu mimo USA

model_1 <- glm(target ~ so2_log + nonwhite + rain, data = pollution, family = "binomial")
model_2 <- glm(target ~ jantemp + rain + educ + nonwhite + whitecollar + housesize + income + hc + so2 + nox, data = pollution, family = "binomial")
model_3 <- glm(target ~ jantemp + rain + educ + nonwhite + whitecollar + housesize + income + hc_log + so2_log + nox_log, data = pollution, family = "binomial")

summary(model_1) # all variables are significant
summary(model_2)
summary(model_3)

# Model 3,4 

# Predictions
pred_1 <- predict(model_1, type = "response")
pred_2 <- predict(model_2, type = "response")
pred_3 <- predict(model_3, type = "response")

#install.packages("pROC)
library(pROC)
library(tidyverse)

par(pty="s") 
lrROC <- roc(pollution$target ~ pred_1,
             plot=TRUE,
             print.auc=TRUE,
             col="green",
             lwd =3,
             legacy.axes=TRUE,
             print.auc.x = 0.4,
             print.auc.y = 0.80,
             main="ROC Curves")


roc(pollution$target, pred_2, col="blue",print.auc.y = 0.72, print.auc.x = 0.4,
    plot = TRUE,add = TRUE, print.auc=TRUE, lwd =3)

roc(pollution$target, pred_3, col="red",print.auc.y = 0.64, print.auc.x = 0.4,
    plot = TRUE,add = TRUE, print.auc=TRUE, lwd =3)


legend("bottomright", legend = c("model 1", "model 2", "model 3"),
       col = c("green", "blue","red"), lwd = 3, cex = 0.6)

par(pty="m")

# Model 3 ma podla ROC curve a hodnoty AUC najvyssie predikcnu silu

#########
## Distribution of predictions for target = 0 / 1
## Zobrazenie distribucie predikovanych pravdepodobnosti v zavislosti ci bola/nebola umrtnost > medianova umrtnost

#install.packages("patchwork")
library(patchwork)

p1 <- 
  data.frame(real = pollution$target, pred = pred_1) %>%
  ggplot(aes(x = pred, fill = factor(real))) + 
  geom_density(alpha = 0.4) + 
  theme_bw() + 
  theme(legend.position = "bottom") +
  labs(x = "Predict", colour = "Real", fill = "Mortality > median") + 
  ggtitle("Distribution - model 1")

p2 <- 
  data.frame(real = pollution$target, pred = pred_2) %>%
  ggplot(aes(x = pred, fill = factor(real))) + 
  geom_density(alpha = 0.4) + 
  theme_bw() + 
  theme(legend.position = "bottom") +
  labs(x = "Predict", colour = "Real", fill = "Mortality > median") + 
  ggtitle("Distribution - model 2")

p3 <- 
  data.frame(real = pollution$target, pred = pred_3) %>%
  ggplot(aes(x = pred, fill = factor(real))) + 
  geom_density(alpha = 0.4) + 
  theme_bw() + 
  theme(legend.position = "bottom") +
  labs(x = "Predict", colour = "Real", fill = "Mortality > median") + 
  ggtitle("Distribution - model 3")

p1 + p2 + p3 

# Distribucie su podobne, Model 3 ma ale najmensi prekryv  


# So zvysujucou predikovanou pravdepodobnostou by mal podiel modrej farby narastat.

p1 <- 
  data.frame(real = pollution$target, pred = pred_1) %>%
  ggplot(aes(x = pred, fill = factor(real))) + 
  geom_histogram(alpha = 1, position = "fill", colour = "black",binwidth = 0.2) +
  theme_bw() + 
  theme(legend.position = "bottom") +
  labs(x = "Predicted vs Real", y = "Value", fill = "Mortality > median") + 
  ggtitle("Model n. 1")

p2 <- 
  data.frame(real = pollution$target, pred = pred_2) %>%
  ggplot(aes(x = pred, fill = factor(real))) + 
  geom_histogram(alpha = 1, position = "fill", colour = "black",binwidth = 0.2) +
  theme_bw() + 
  theme(legend.position = "bottom") +
  labs(x = "Predicted vs Real", y = "Value", fill = "Mortality > median") + 
  ggtitle("Model n. 2")


p3 <- 
  data.frame(real = pollution$target, pred = pred_3) %>%
  ggplot(aes(x = pred, fill = factor(real))) + 
  geom_histogram(alpha = 1, position = "fill", colour = "black",binwidth = 0.2) +
  theme_bw() + 
  theme(legend.position = "bottom") +
  labs(x = "Predicted vs Real", y = "Value", fill = "Mortality > median") + 
  ggtitle("Model n. 3")


p1 + p2 + p3 

# Vsetky  3 modely maju rastuci trend, co je dobre. Cim vyssia predikovana pravdepodobnost, tym vyssi pomer toho, ze target = 1 (umrtnost vyssia ako medianova umrtnost)
## PSEUDO R squared

# Unlike linear regression with ordinary least squares estimation, there is no R2 statistic 
# which explains the proportion of variance in the dependent variable that is explained by 
# the predictors. However, there are a number of pseudo R2 metrics that could be of value. 
# Most notable is McFaddenÃ¢â¬â¢s R2, which is defined as 1Ã¢Ââ[ln(LM)/ln(L0)] where ln(LM) is the log 
# likelihood value for the fitted model and ln(L0) is the log likelihood for the null model with 
# only an intercept as a predictor. The measure ranges from 0 to just under 1, with values closer 
# to zero indicating that the model has no predictive power.

#install.packages("pscl")
library(pscl)
pR2(model_1)["McFadden"]  # pseudolook for 'McFadden' = 0.517,
pR2(model_2)["McFadden"]  # pseudolook for 'McFadden' = 0.701 
pR2(model_3)["McFadden"]  # pseudolook for 'McFadden' = 0.799

# Ak by sme si mali vybrat medzi modelmi, urcite pouzit model 3 oproti modelu 2. Ma rovnako vela premennych, avsak ukazala sa lepsia predikcna sila pri viacerych ukazovatleoch
# Ak by sme chceli jednoduchsi model, urcite treba pouzit model 1, nakolko ma vyrazne mensi pocet premenych a jeho vykonnost je dobra. 

# Kedze vsak mame vela premennych v modeli, je vhodne si vysvotrit  train/test  sample. 
# Na trenovacej vzorke model naucime a na testovacej vzorke vyhodnotime. 
# Dovod je taky, aby vybrany model nebol preuceny (overfitted) a dobre vedel predikovat len na datach ktore mal k dispozicii pri uceni


#############################################################
###              TRAIN / TEST SPLIT                       ###
#############################################################

set.seed(2020)
train_test <- sample(c("train","test"), size = nrow(pollution), replace = TRUE, prob = c(0.7,0.3))
pollution["sample"] <- train_test

pollution_train <- pollution[pollution$sample == "train", ]
pollution_test <- pollution[pollution$sample == "test", ]

# Naucenie modelu na train sete 
model_1 <- glm(target ~ so2_log + nonwhite + rain, data = pollution_train, family = "binomial")
model_2 <- glm(target ~ jantemp + rain + educ + nonwhite + whitecollar + housesize + income + hc + so2 + nox , data = pollution_train, family = "binomial")
model_3 <- glm(target ~ jantemp + rain + educ + nonwhite + whitecollar + housesize + income + hc_log + so2_log + nox_log, data = pollution_train, family = "binomial")

summary(model_1) # all variables are significant
summary(model_2)
summary(model_3)

# Model 3,4 

# Predictions for test set
pred_1 <- predict(model_1,newdata = pollution_test, type = "response")
pred_2 <- predict(model_2,newdata = pollution_test, type = "response")
pred_3 <- predict(model_3,newdata = pollution_test, type = "response")


#install.packages("pROC)
library(pROC)
library(tidyverse)


## ROC CURVE AND AUC FOR TRAIN SET
par(pty="s") 
lrROC <- roc(pollution_train$target ~ predict(model_1, type = "response"),
             plot=TRUE,
             print.auc=TRUE,
             col="green",
             lwd =3,
             legacy.axes=TRUE,
             print.auc.x = 0.4,
             print.auc.y = 0.80,
             main="ROC Curves - train set")

roc(pollution_train$target, predict(model_2, type = "response"), col="blue",print.auc.y = 0.72, print.auc.x = 0.4,
    plot = TRUE,add = TRUE, print.auc=TRUE, lwd =3)

roc(pollution_train$target, predict(model_3, type = "response"), col="red",print.auc.y = 0.64, print.auc.x = 0.4,
    plot = TRUE,add = TRUE, print.auc=TRUE, lwd =3)


legend("bottomright", legend = c("model 1", "model 2", "model 3"),
       col = c("green", "blue","red"), lwd = 3, cex = 0.6)

par(pty="m")



## ROC CURVE AND AUC FOR TEST SET
par(pty="s") 
lrROC <- roc(pollution_test$target ~ pred_1,
             plot=TRUE,
             print.auc=TRUE,
             col="green",
             lwd =3,
             legacy.axes=TRUE,
             print.auc.x = 0.4,
             print.auc.y = 0.80,
             main="ROC Curves - test set")

roc(pollution_test$target, pred_2, col="blue",print.auc.y = 0.72, print.auc.x = 0.4,
    plot = TRUE,add = TRUE, print.auc=TRUE, lwd =3)

roc(pollution_test$target, pred_3, col="red",print.auc.y = 0.64, print.auc.x = 0.4,
    plot = TRUE,add = TRUE, print.auc=TRUE, lwd =3)


legend("bottomright", legend = c("model 1", "model 2", "model 3"),
       col = c("green", "blue","red"), lwd = 3, cex = 0.6)

par(pty="m")

## Vidime, ze pri test sete nam vyrazne klesla predikcna sila u modelov. Najviac klesla a modelu 2 a 3, pricom model 1 ma na testovacom sete najlepsiu predikcnu silu
# Z tohto vidime, ze pouzitie tolkych premennych nebolo vhodne pre takto maly dataset (malo pozorovani)
# Na zaklade tohto zistenia, by sme zvolili radsej jednoduchsi model, ktory sa nedokaze overfitnut (preucit)
# Pozrime sa este na distribuciu predikcii


#########
## Distribution of predictions for target = 0 / 1
## Zobrazenie distribucie predikovanych pravdepodobnosti v zavislosti ci bola/nebola umrtnost > medianova umrtnost

#install.packages("patchwork")
library(patchwork)

p1 <- 
  data.frame(real = pollution_test$target, pred = pred_1) %>%
  ggplot(aes(x = pred, fill = factor(real))) + 
  geom_density(alpha = 0.4) + 
  theme_bw() + 
  theme(legend.position = "bottom") +
  labs(x = "Predict", colour = "Real", fill = "Mortality > median") + 
  ggtitle("Distribution - model 1")

p2 <- 
  data.frame(real = pollution_test$target, pred = pred_2) %>%
  ggplot(aes(x = pred, fill = factor(real))) + 
  geom_density(alpha = 0.4) + 
  theme_bw() + 
  theme(legend.position = "bottom") +
  labs(x = "Predict", colour = "Real", fill = "Mortality > median") + 
  ggtitle("Distribution - model 2")

p3 <- 
  data.frame(real = pollution_test$target, pred = pred_3) %>%
  ggplot(aes(x = pred, fill = factor(real))) + 
  geom_density(alpha = 0.4) + 
  theme_bw() + 
  theme(legend.position = "bottom") +
  labs(x = "Predict", colour = "Real", fill = "Mortality > median") + 
  ggtitle("Distribution - model 3")

p1 + p2 + p3 

# So zvysujucou predikovanou pravdepodobnostou by mal podiel modrej farby narastat.

p1 <- 
  data.frame(real = pollution_test$target, pred = pred_1) %>%
  ggplot(aes(x = pred, fill = factor(real))) + 
  geom_histogram(alpha = 1, position = "fill", colour = "black",binwidth = 0.2) +
  theme_bw() + 
  theme(legend.position = "bottom") +
  labs(x = "Predicted vs Real", y = "Value", fill = "Mortality > median") + 
  ggtitle("Model n. 1")

p2 <- 
  data.frame(real = pollution_test$target, pred = pred_2) %>%
  ggplot(aes(x = pred, fill = factor(real))) + 
  geom_histogram(alpha = 1, position = "fill", colour = "black",binwidth = 0.2) +
  theme_bw() + 
  theme(legend.position = "bottom") +
  labs(x = "Predicted vs Real", y = "Value", fill = "Mortality > median") + 
  ggtitle("Model n. 2")


p3 <- 
  data.frame(real = pollution_test$target, pred = pred_3) %>%
  ggplot(aes(x = pred, fill = factor(real))) + 
  geom_histogram(alpha = 1, position = "fill", colour = "black",binwidth = 0.2) +
  theme_bw() + 
  theme(legend.position = "bottom") +
  labs(x = "Predicted vs Real", y = "Value", fill = "Mortality > median") + 
  ggtitle("Model n. 3")


p1 + p2 + p3 


# Model 1 ma najlepsi priebehe distribucie.


## Zaver:
# Ak nerozdelime data na trenovaciu a testovaciu vzorku, tak najlepsiu predikcnu silu ma ocakavane model 3, kedze ma najvac premennych
# Po rozdeleni na train a test set sme si vsak mohli vsimnut, ze  je vhodnejsie pouzit model 1 s malo premennymi, nakolko model nema tendenciu preucit sa (overfitting).
# Model s menej premennymi bude aj lahsie pouzitelny na miesta mimo USA, kedze budu lahsie pristupne potrebne data. 

# Na zaklade analyz sme sa rozhodli pre model 1 


